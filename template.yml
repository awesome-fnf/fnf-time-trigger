ROSTemplateFormatVersion: '2015-09-01'
Transform: 'Aliyun::Serverless-2018-04-03'
Parameters:
  Cron:
    Type: String
    Description: cron expression
    Default: '@every 1m'
  Input:
    Type: String
    Description: target flow json input
    Default: ''
Resources:
  # Target service and function which will invoked in flow Task Step
  service:
    Type: 'Aliyun::Serverless::Service'
    Properties:
      Description: fnf-time-trigger
    hello:
      Type: 'Aliyun::Serverless::Function'
      Properties:
        FunctionName: hello
        Description: function invoked by FnF flow
        Handler: hello.handler
        Runtime: python3
        Timeout: 60
        MemorySize: 128
        CodeUri: src/hello.py

  # flow
  flow:
    DependsOn:
      - service
    Type: 'Aliyun::Serverless::Flow'
    Properties:
      Name:
        Fn::Replace:
          - <suffix>:
              Ref: ALIYUN::StackName
          - FnFTimer-<suffix>
      Description: Fnf time trigger demo flow
      Policies:
        - AliyunFCInvocationAccess
      Definition:
        Fn::Replace:
          - <ServiceName>:
              Fn::GetAtt:
                - service
                - ServiceName
          - |-
            version: v1beta1
            type: flow
            steps:
              # task step to invoke FC function hello
              - type: task
                name: hello
                resourceArn: acs:fc:::services/<ServiceName>/functions/hello

  # schedule to time invoke flow
  schedule:
    Type: 'ALIYUN::FNF::Schedule'
    Properties:
      Description: 'schedule to auto invoke flow'
      FlowName:
        Fn::Replace:
          - <flowName>:
              Fn::GetAtt:
                - flow
                - Name
          - <flowName>
      Enable: true
      Payload:
        Ref: Input
      CronExpression:
        Ref: Cron
      ScheduleName: 'demo-schedule'

Outputs:
  entrypointFlowName:
    Value:
      'Fn::GetAtt':
        - 'flow'
        - 'Name'
  applicationName:
    Value: timer
